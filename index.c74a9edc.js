let t;const h=(t,h)=>e(t,h,"2d"),e=(t,h,e)=>{let d=i(h),a=document.createElement("canvas");h.appendChild(a),a.id=t,a.width=d.width,a.height=d.height;let l={context:a.getContext(e),canvas:a,resizeCallback:()=>{d=i(h),(a.width!==d.width||a.height!==d.height)&&(a.width=d.width,a.height=d.height)}};return l},i=t=>{let h={width:t.clientWidth,height:t.clientHeight};return h};class d{constructor(t,h,e,i,d){this.setCanvasSize=t=>{this.pixelToFrameRatio=1,this.containWidth&&this.containHeight?(this.pixelToFrameRatio=t.canvas.width/this.frameWidth,this.pixelToFrameRatio=Math.min(this.pixelToFrameRatio,t.canvas.height/this.frameHeight),this.xOffset=(t.canvas.width-this.frameWidth*this.pixelToFrameRatio)/2,this.yOffset=(t.canvas.height-this.frameHeight*this.pixelToFrameRatio)/2):this.containWidth?(this.pixelToFrameRatio=t.canvas.width/this.frameWidth,this.xOffset=(t.canvas.width-this.frameWidth*this.pixelToFrameRatio)/2,this.yOffset=0):this.containHeight&&(this.pixelToFrameRatio=t.canvas.height/this.frameHeight,this.yOffset=(t.canvas.height-this.frameHeight*this.pixelToFrameRatio)/2,this.xOffset=0)},this.containWidth=t,this.containHeight=h,this.frameWidth=e,this.frameHeight=i,this.setCanvasSize(d)}}class a{constructor(t){this.pipeline=[],this.canvasContext=t}addPipe(t){this.pipeline=this.pipeline.concat(t)}execute(t,h){let e={canvasContext:this.canvasContext,gameState:h};for(let h of this.pipeline)h.executeDelta(t,e)}}const l=(t,h=1/120,e=.1)=>{let i=new Date;i.setSeconds(i.getSeconds()-1);let d=!0,a=-1,l=h=>{let i=h/1e3;i-=a,a=h/1e3,t(i=i>e?e:i),!0===d&&window.requestAnimationFrame(t=>{l(t)})};return window.requestAnimationFrame(t=>{l(t)}),()=>{d=!1}};class r{constructor(t=0,h=0,e=100,i=100,d=0,a=0,l=!0,r=1){this.x=this.xPrevious=t,this.y=this.yPrevious=h,this.width=e,this.height=i,this.vectorX=d,this.vectorY=a,this.obeysGravity=l,this.gravityScale=r}applyDelta(t,h){s(this,t,h)}createNewFromDelta(t,h){return y(this,t,h)}}const s=(t,h,e)=>{t.xPrevious=t.x,t.yPrevious=t.y,g(t,h,e),x(t,e)},y=(t,h,e)=>{let i=w(t);return s(i,h,e),i},x=(t,h)=>{t.x=t.x+t.vectorX*h,t.y=t.y+t.vectorY*h},g=(t,h,e)=>{t.obeysGravity&&(t.vectorY=Math.max(h.minVerticalVelocityPerSecond*t.gravityScale,t.vectorY+=h.gravityAccelerationPerSecond*e*t.gravityScale))},w=t=>({...t});class o extends r{constructor(t,h,e,i){super(t,h,e,i),this.colour="rgba(0, 0, 0, 0.3)",this.renderX=t,this.renderY=h,this.renderWidth=e,this.renderHeight=i}}const n=()=>new f({x:150,y:350,height:32,width:51.2},{x:70,y:200,height:64,width:64});class c extends o{constructor(t,h,e,i){super(t,h,e,i),this.positionHistory=[],this.onTheGround=!1,this.alive=!0,this.lastDelta=0}applyDelta(t,h){this.lastDelta=h,super.applyDelta(t,h)}}class p extends o{constructor(t,h,e,i){super(t,h,e,i),this.onTheGround=!1,this.alive=!0,this.positionHistory=[]}}class f{constructor(t,h){this.clicked=()=>{if(0===this.leader.vectorX){this.leader.vectorX=400;let t=this.leader.x;for(;t>this.follower.x;)this.leader.positionHistory.unshift({x:t,y:this.leader.y}),t-=400*this.leader.lastDelta}else this.currentCombinedJumps<2&&(this.currentCombinedJumps++,this.leader.vectorY<0&&(this.leader.vectorY=0),this.leader.vectorY+=400,this.leader.onTheGround=!1)},this.landed=()=>{this.leader.onTheGround=!0,this.currentCombinedJumps=0},this.leader=new c(t.x,t.y,t.width,t.height),this.follower=new p(h.x,h.y,h.width,h.height),this.vortex=new p(h.x+h.width/2,h.y,h.width/2,h.height),this.vortex.alive=!1,this.currentCombinedJumps=2,this.leader.colour="#D10000",this.follower.colour="#D10000"}}const m=()=>({platforms:[],obstacles:[],player:n(),camera:void 0,particles:[],snowClouds:[],snowFall:void 0,world:{gravity:1280,minVerticalVelocityPerSecond:-3200,gravityAccelerationPerSecond:-1280}}),v={platforms:[{x:-1472,y:512,width:7552,height:128},{x:7072,y:448,width:7168,height:192},{x:14432,y:384,width:320,height:256},{x:14944,y:320,width:384,height:320},{x:15488,y:416,width:384,height:224},{x:16032,y:512,width:576,height:128},{x:16960,y:352,width:800,height:288},{x:17856,y:512,width:1152,height:128},{x:6304,y:512,width:736,height:128},{x:19136,y:512,width:4768,height:128},{x:24064,y:512,width:7808,height:128}],obstacles:[{x:0,y:640,width:224,height:256},{x:6048,y:640,width:288,height:256},{x:14208,y:640,width:288,height:256},{x:14624,y:640,width:448,height:256},{x:15328,y:640,width:992,height:256},{x:16576,y:640,width:1344,height:256},{x:18976,y:640,width:192,height:256},{x:11936,y:384,width:64,height:64},{x:8928,y:320,width:64,height:128},{x:11584,y:224,width:64,height:64},{x:10752,y:384,width:64,height:64},{x:19936,y:448,width:64,height:64},{x:20672,y:448,width:64,height:64},{x:23264,y:448,width:64,height:64},{x:23840,y:640,width:256,height:256},{x:2368,y:448,width:64,height:64},{x:3968,y:448,width:64,height:64},{x:4864,y:448,width:64,height:64},{x:22336,y:448,width:64,height:64},{x:21472,y:448,width:64,height:64},{x:13344,y:320,width:64,height:128},{x:25728,y:384,width:64,height:128},{x:27360,y:384,width:64,height:128},{x:28288,y:448,width:64,height:64},{x:31840,y:640,width:160,height:256},{x:6912,y:640,width:288,height:256}],loadPoint:[{x:29984,y:0,width:32,height:32}]},u={obstacles:[{x:0,y:640,width:224,height:256},{x:4736,y:640,width:416,height:256},{x:5344,y:640,width:256,height:256},{x:6688,y:640,width:256,height:256},{x:13088,y:640,width:160,height:256},{x:14112,y:640,width:224,height:256},{x:14592,y:640,width:288,height:256},{x:16256,y:640,width:992,height:256},{x:17792,y:640,width:448,height:256},{x:19680,y:640,width:448,height:256},{x:24992,y:384,width:64,height:128},{x:2400,y:448,width:64,height:64},{x:768,y:448,width:64,height:64},{x:1856,y:448,width:64,height:64},{x:1312,y:448,width:64,height:64},{x:4032,y:448,width:64,height:64},{x:3488,y:448,width:64,height:64},{x:2944,y:448,width:64,height:64},{x:18688,y:448,width:64,height:64},{x:19680,y:448,width:64,height:64},{x:20832,y:448,width:64,height:64},{x:21376,y:448,width:64,height:64},{x:21920,y:448,width:64,height:64},{x:22464,y:448,width:64,height:64},{x:23008,y:448,width:64,height:64},{x:23552,y:448,width:64,height:64},{x:8096,y:480,width:64,height:64},{x:7552,y:480,width:64,height:64},{x:10368,y:448,width:64,height:64},{x:9824,y:448,width:64,height:64},{x:10912,y:448,width:64,height:64},{x:12320,y:448,width:64,height:64},{x:11776,y:448,width:64,height:64},{x:26176,y:384,width:64,height:128},{x:27264,y:384,width:64,height:128},{x:28160,y:448,width:64,height:64},{x:28928,y:448,width:64,height:64},{x:31872,y:640,width:128,height:256},{x:25888,y:640,width:320,height:256},{x:24096,y:640,width:288,height:256},{x:15680,y:640,width:224,height:256},{x:15136,y:640,width:288,height:256},{x:9184,y:640,width:160,height:256},{x:6112,y:640,width:256,height:256}],platforms:[{x:64,y:512,width:4704,height:128},{x:4896,y:448,width:480,height:192},{x:5536,y:384,width:640,height:256},{x:13184,y:320,width:960,height:320},{x:14304,y:320,width:320,height:320},{x:14784,y:320,width:384,height:320},{x:15328,y:320,width:384,height:320},{x:15872,y:512,width:608,height:128},{x:16608,y:512,width:320,height:128},{x:17088,y:512,width:800,height:128},{x:18080,y:512,width:1664,height:128},{x:19872,y:512,width:4288,height:128},{x:24320,y:512,width:1600,height:128},{x:6272,y:448,width:480,height:192},{x:6848,y:544,width:2368,height:96},{x:9312,y:512,width:3808,height:128},{x:26176,y:512,width:5728,height:128}]},P={obstacles:[{x:0,y:640,width:224,height:256},{x:7040,y:640,width:448,height:256},{x:16512,y:640,width:384,height:256},{x:18912,y:640,width:448,height:256},{x:24992,y:384,width:64,height:128},{x:3904,y:448,width:64,height:64},{x:4032,y:384,width:64,height:128},{x:18880,y:448,width:64,height:64},{x:18976,y:384,width:64,height:128},{x:20832,y:448,width:64,height:64},{x:21376,y:448,width:64,height:64},{x:21920,y:448,width:64,height:64},{x:22464,y:448,width:64,height:64},{x:23008,y:448,width:64,height:64},{x:23552,y:448,width:64,height:64},{x:8672,y:416,width:64,height:128},{x:7584,y:416,width:64,height:128},{x:26176,y:384,width:64,height:128},{x:27264,y:384,width:64,height:128},{x:28160,y:448,width:64,height:64},{x:28928,y:448,width:64,height:64},{x:31872,y:640,width:128,height:256},{x:25888,y:640,width:320,height:256},{x:23584,y:640,width:640,height:256},{x:15840,y:640,width:224,height:256},{x:9184,y:640,width:160,height:256},{x:6464,y:640,width:256,height:256},{x:2048,y:96,width:64,height:64},{x:4352,y:640,width:416,height:256},{x:3904,y:640,width:320,height:256},{x:2400,y:640,width:384,height:256},{x:1792,y:640,width:288,height:256},{x:6624,y:384,width:64,height:64},{x:11872,y:384,width:64,height:128},{x:13216,y:384,width:64,height:64},{x:10464,y:640,width:448,height:288},{x:12032,y:640,width:160,height:288},{x:13248,y:640,width:224,height:256},{x:14592,y:640,width:448,height:256},{x:15808,y:384,width:64,height:128},{x:17696,y:384,width:64,height:64},{x:17824,y:384,width:64,height:128},{x:13440,y:256,width:64,height:64}],platforms:[{x:64,y:512,width:1024,height:128},{x:13440,y:320,width:960,height:320},{x:14400,y:256,width:288,height:384},{x:16832,y:448,width:928,height:192},{x:17760,y:512,width:1280,height:128},{x:19328,y:512,width:4288,height:128},{x:24192,y:512,width:1792,height:128},{x:6624,y:448,width:736,height:192},{x:7456,y:544,width:2240,height:96},{x:9696,y:416,width:864,height:224},{x:26176,y:512,width:5728,height:128},{x:1088,y:352,width:736,height:288},{x:2048,y:160,width:448,height:480},{x:2720,y:512,width:1376,height:128},{x:4192,y:288,width:352,height:352},{x:10688,y:288,width:64,height:352},{x:10880,y:512,width:1184,height:128},{x:12160,y:512,width:1056,height:128},{x:13216,y:448,width:64,height:192},{x:14912,y:512,width:1632,height:128},{x:4672,y:384,width:1856,height:256}]},S={obstacles:[{x:0,y:640,width:224,height:320},{x:4864,y:640,width:416,height:320},{x:12800,y:640,width:384,height:320},{x:14080,y:640,width:288,height:320},{x:14624,y:640,width:352,height:320},{x:15296,y:640,width:320,height:320},{x:16768,y:640,width:1632,height:320},{x:9440,y:384,width:64,height:64},{x:8928,y:384,width:64,height:64},{x:8416,y:384,width:64,height:64},{x:10656,y:384,width:64,height:64},{x:10752,y:320,width:64,height:128},{x:12096,y:384,width:64,height:64},{x:22816,y:448,width:64,height:64},{x:20128,y:448,width:64,height:64},{x:20672,y:448,width:64,height:64},{x:21760,y:384,width:64,height:128},{x:23360,y:448,width:64,height:64},{x:23904,y:448,width:64,height:64},{x:1600,y:640,width:192,height:320},{x:2816,y:640,width:128,height:320},{x:3488,y:480,width:64,height:64},{x:3648,y:480,width:64,height:64},{x:6112,y:416,width:64,height:128},{x:7136,y:640,width:544,height:352},{x:18656,y:640,width:640,height:320},{x:21792,y:640,width:384,height:320},{x:15936,y:640,width:320,height:320},{x:30432,y:640,width:448,height:320},{x:29408,y:640,width:384,height:320},{x:26752,y:640,width:384,height:320},{x:25088,y:448,width:64,height:64},{x:25536,y:448,width:64,height:64},{x:26048,y:448,width:64,height:64},{x:31840,y:640,width:160,height:320},{x:23936,y:640,width:256,height:320},{x:3968,y:480,width:64,height:64},{x:3808,y:480,width:64,height:64},{x:4736,y:480,width:64,height:64},{x:5184,y:480,width:64,height:64},{x:4896,y:480,width:64,height:64},{x:9952,y:384,width:64,height:64},{x:11840,y:320,width:64,height:128},{x:11744,y:384,width:64,height:64},{x:16224,y:448,width:64,height:64},{x:15424,y:320,width:64,height:128},{x:14752,y:352,width:64,height:64}],platforms:[{x:32,y:512,width:1600,height:128},{x:1760,y:448,width:1088,height:192},{x:7648,y:448,width:5184,height:192},{x:13152,y:448,width:960,height:192},{x:14336,y:384,width:320,height:256},{x:14944,y:384,width:384,height:256},{x:15584,y:320,width:384,height:320},{x:16224,y:512,width:576,height:128},{x:17184,y:512,width:320,height:128},{x:18368,y:512,width:320,height:128},{x:19264,y:512,width:2560,height:128},{x:22144,y:512,width:1824,height:128},{x:24160,y:512,width:2624,height:128},{x:2912,y:544,width:2048,height:96},{x:5120,y:544,width:2048,height:96},{x:27104,y:512,width:2336,height:128},{x:29760,y:512,width:704,height:128},{x:30848,y:512,width:1024,height:128},{x:24960,y:192,width:1408,height:64},{x:17760,y:512,width:320,height:128},{x:15424,y:448,width:64,height:192},{x:14752,y:416,width:64,height:224}]},D={obstacles:[{x:0,y:640,width:224,height:256},{x:7264,y:640,width:576,height:256},{x:16512,y:640,width:384,height:256},{x:24992,y:384,width:64,height:128},{x:3488,y:448,width:64,height:64},{x:3616,y:384,width:64,height:128},{x:18880,y:448,width:64,height:64},{x:19200,y:448,width:64,height:64},{x:20416,y:448,width:64,height:64},{x:21920,y:448,width:64,height:64},{x:22464,y:448,width:64,height:64},{x:23008,y:448,width:64,height:64},{x:23328,y:448,width:64,height:64},{x:8672,y:384,width:64,height:128},{x:26176,y:384,width:64,height:128},{x:27392,y:384,width:64,height:128},{x:28320,y:448,width:64,height:64},{x:28640,y:448,width:64,height:64},{x:31872,y:640,width:128,height:256},{x:25888,y:640,width:320,height:256},{x:23040,y:640,width:1184,height:256},{x:6016,y:640,width:704,height:192},{x:2144,y:640,width:704,height:192},{x:1056,y:640,width:736,height:256},{x:12160,y:448,width:64,height:64},{x:10464,y:640,width:1568,height:288},{x:12032,y:640,width:1920,height:288},{x:15040,y:384,width:64,height:128},{x:17696,y:384,width:64,height:64},{x:17824,y:384,width:64,height:128},{x:4544,y:448,width:64,height:64},{x:4864,y:448,width:64,height:64},{x:12352,y:448,width:64,height:64},{x:15232,y:384,width:64,height:128},{x:16544,y:384,width:64,height:128},{x:16832,y:384,width:64,height:64},{x:19328,y:448,width:64,height:64},{x:13920,y:448,width:64,height:64},{x:22144,y:640,width:352,height:256},{x:20448,y:640,width:416,height:256},{x:21184,y:640,width:448,height:256},{x:28480,y:448,width:64,height:64},{x:27296,y:384,width:64,height:128}],platforms:[{x:64,y:512,width:1024,height:128},{x:13920,y:512,width:2688,height:128},{x:16832,y:448,width:928,height:192},{x:17760,y:512,width:2720,height:128},{x:23680,y:512,width:2240,height:128},{x:6688,y:512,width:608,height:128},{x:7808,y:512,width:2688,height:128},{x:26176,y:512,width:5728,height:128},{x:1728,y:512,width:448,height:128},{x:2816,y:512,width:3232,height:128},{x:10880,y:512,width:96,height:128},{x:11360,y:512,width:96,height:128},{x:11840,y:512,width:128,height:128},{x:12128,y:512,width:96,height:128},{x:20832,y:512,width:384,height:128},{x:21600,y:512,width:576,height:128},{x:12320,y:512,width:96,height:128},{x:12832,y:512,width:96,height:128},{x:13344,y:512,width:96,height:128},{x:22464,y:512,width:608,height:128},{x:23328,y:512,width:64,height:128}]},C={obstacles:[{x:0,y:640,width:224,height:320},{x:4672,y:640,width:736,height:320},{x:6112,y:640,width:256,height:320},{x:7264,y:640,width:448,height:320},{x:12800,y:640,width:320,height:320},{x:14016,y:640,width:352,height:320},{x:14624,y:640,width:352,height:320},{x:15296,y:640,width:320,height:320},{x:16768,y:640,width:448,height:320},{x:17472,y:640,width:544,height:320},{x:18880,y:640,width:416,height:320},{x:25120,y:640,width:416,height:320},{x:9760,y:448,width:64,height:64},{x:9056,y:384,width:64,height:64},{x:8288,y:384,width:64,height:64},{x:9952,y:160,width:64,height:64},{x:10464,y:192,width:64,height:64},{x:10752,y:448,width:64,height:64},{x:11488,y:384,width:64,height:64},{x:12128,y:384,width:64,height:64},{x:22816,y:448,width:64,height:64},{x:20128,y:448,width:64,height:64},{x:20672,y:448,width:64,height:64},{x:21760,y:384,width:64,height:128},{x:24448,y:448,width:64,height:64},{x:23136,y:448,width:64,height:64},{x:23904,y:448,width:64,height:64},{x:928,y:384,width:64,height:128},{x:1056,y:384,width:64,height:128},{x:2048,y:448,width:64,height:64},{x:4640,y:256,width:64,height:64},{x:15936,y:640,width:320,height:320},{x:26176,y:640,width:288,height:320},{x:26976,y:640,width:224,height:320},{x:28128,y:640,width:352,height:320},{x:28544,y:640,width:320,height:320},{x:29280,y:640,width:864,height:320},{x:14688,y:480,width:64,height:64},{x:8064,y:96,width:64,height:64},{x:17984,y:448,width:64,height:64},{x:27648,y:192,width:64,height:64},{x:31936,y:640,width:64,height:320},{x:30336,y:640,width:576,height:320},{x:22912,y:448,width:64,height:64},{x:23008,y:384,width:64,height:128},{x:18976,y:352,width:64,height:64},{x:15584,y:320,width:64,height:64},{x:12128,y:128,width:64,height:64}],platforms:[{x:32,y:512,width:3008,height:128},{x:3040,y:448,width:512,height:192},{x:5184,y:320,width:960,height:320},{x:6336,y:128,width:960,height:512},{x:7648,y:448,width:2080,height:192},{x:13088,y:448,width:960,height:192},{x:14336,y:384,width:320,height:256},{x:14944,y:320,width:384,height:320},{x:15584,y:384,width:384,height:256},{x:16224,y:512,width:576,height:128},{x:17184,y:512,width:320,height:128},{x:17984,y:512,width:960,height:128},{x:19264,y:512,width:5888,height:128},{x:3552,y:384,width:544,height:256},{x:4096,y:320,width:608,height:320},{x:9248,y:160,width:608,height:64},{x:10080,y:192,width:352,height:64},{x:10560,y:192,width:704,height:64},{x:11456,y:128,width:640,height:64},{x:13248,y:-96,width:1504,height:64},{x:14976,y:-192,width:13344,height:64},{x:25504,y:576,width:352,height:64},{x:25856,y:512,width:352,height:128},{x:26432,y:448,width:576,height:192},{x:27168,y:320,width:480,height:320},{x:27648,y:256,width:512,height:384},{x:28448,y:160,width:128,height:480},{x:28832,y:512,width:480,height:128},{x:14656,y:544,width:96,height:96},{x:9856,y:448,width:864,height:192},{x:9728,y:512,width:128,height:128},{x:10720,y:512,width:128,height:128},{x:10848,y:448,width:1984,height:192},{x:30016,y:512,width:352,height:128},{x:30880,y:512,width:352,height:128},{x:31360,y:512,width:608,height:128},{x:31232,y:576,width:128,height:64},{x:18944,y:416,width:96,height:224},{x:12224,y:128,width:608,height:64}]},b={obstacles:[{x:0,y:640,width:224,height:320},{x:1760,y:448,width:64,height:64},{x:1792,y:640,width:480,height:320},{x:4e3,y:192,width:64,height:64},{x:6784,y:128,width:64,height:128},{x:7872,y:192,width:64,height:64},{x:8e3,y:192,width:64,height:64},{x:8096,y:192,width:64,height:64},{x:8224,y:192,width:64,height:64},{x:9760,y:128,width:64,height:128},{x:9952,y:192,width:64,height:64},{x:10720,y:128,width:64,height:128},{x:10816,y:192,width:64,height:64},{x:12064,y:480,width:64,height:64},{x:12544,y:480,width:64,height:64},{x:13024,y:480,width:64,height:64},{x:13504,y:480,width:64,height:64},{x:13952,y:640,width:192,height:320},{x:14464,y:480,width:64,height:64},{x:15456,y:480,width:64,height:64},{x:14912,y:640,width:192,height:320},{x:16512,y:480,width:64,height:64},{x:15968,y:640,width:128,height:320},{x:16992,y:640,width:128,height:320},{x:17632,y:480,width:64,height:64},{x:18080,y:640,width:128,height:320},{x:18720,y:480,width:64,height:64},{x:19136,y:640,width:320,height:320},{x:19936,y:480,width:64,height:64},{x:21280,y:480,width:64,height:64},{x:20480,y:640,width:320,height:320},{x:22624,y:480,width:64,height:64},{x:21824,y:640,width:320,height:320},{x:23968,y:480,width:64,height:64},{x:23168,y:640,width:320,height:320},{x:25440,y:416,width:64,height:128},{x:24512,y:640,width:320,height:320},{x:29440,y:480,width:64,height:64},{x:31936,y:640,width:64,height:320},{x:30752,y:640,width:192,height:320},{x:29664,y:640,width:384,height:320},{x:28448,y:640,width:576,height:320},{x:25536,y:416,width:64,height:128},{x:25632,y:416,width:64,height:128},{x:26368,y:480,width:64,height:64},{x:26528,y:480,width:64,height:64},{x:26656,y:480,width:64,height:64},{x:26816,y:480,width:64,height:64},{x:27904,y:480,width:64,height:64},{x:27744,y:480,width:64,height:64},{x:27456,y:480,width:64,height:64},{x:27616,y:480,width:64,height:64}],platforms:[{x:32,y:512,width:1792,height:128},{x:2176,y:544,width:11808,height:96},{x:1920,y:416,width:320,height:64},{x:2752,y:288,width:736,height:64},{x:3552,y:256,width:960,height:64},{x:4608,y:224,width:352,height:64},{x:5024,y:160,width:320,height:64},{x:5504,y:96,width:384,height:64},{x:5984,y:256,width:864,height:64},{x:7072,y:256,width:1792,height:64},{x:9216,y:256,width:1824,height:64},{x:14112,y:544,width:832,height:96},{x:15072,y:544,width:896,height:96},{x:16096,y:544,width:896,height:96},{x:17120,y:544,width:960,height:96},{x:18208,y:544,width:960,height:96},{x:19424,y:544,width:1088,height:96},{x:20768,y:544,width:1088,height:96},{x:22112,y:544,width:1088,height:96},{x:23456,y:544,width:1088,height:96},{x:24800,y:544,width:4064,height:96},{x:28992,y:544,width:704,height:96},{x:30016,y:544,width:768,height:96},{x:30912,y:544,width:1056,height:96}]},H=new class{constructor(){this.levels=[],this.getPlatformsForLevel=(t,h,e)=>{let i=[];for(let d of this.levels[t].platforms){let t=new o(.5*d.x+h,(e.frameHeight-d.height-d.y)*.5,.5*d.width,.5*d.height);t.colour="#3A980B",i.push(t)}return i},this.getObstaclesForLevel=(t,h,e)=>{let i=[];for(let d of this.levels[t].obstacles){let t=new o(.5*d.x+h,(e.frameHeight-d.height-d.y)*.5,.5*d.width,.5*d.height);t.colour="#D10000",i.push(t)}return i},this.levels.push(v),this.levels.push(u),this.levels.push(P),this.levels.push(S),this.levels.push(D),this.levels.push(C),this.levels.push(b)}},T=()=>H;class F extends o{constructor(t,h,e,i,d,a,l,r,s,y,x,g,w,o){super(t,h,e,i),this.alive=!0,this.renderX=t-this.renderWidth/2,this.renderY=h-this.renderHeight/2,this.originalRenderX=t,this.originalRenderY=h,this.renderWidth=e,this.renderHeight=i,this.vectorX=l,this.vectorY=r,this.lifeDelta=0,this.lifetimeInSeconds=o,this.initialWidth=e,this.initialHeight=i,this.finalWidth=d,this.finalHeight=a,this.opacity=s,this.initialOpacity=s,this.finalOpacity=y,this.red=x,this.green=g,this.blue=w}applyDelta(t,h){this.lifeDelta+=h,this.lifeDelta>this.lifetimeInSeconds&&(this.alive=!1),super.applyDelta(t,h),this.renderX=this.x,this.renderY=this.y;let e=this.lifeDelta/this.lifetimeInSeconds;this.width=this.renderWidth=this.initialWidth+(this.finalWidth-this.initialWidth)*e,this.height=this.renderHeight=this.initialHeight+(this.finalHeight-this.initialHeight)*e,this.obeysGravity||(this.renderX=this.originalRenderX-this.renderWidth/2,this.renderY=this.originalRenderY-this.renderHeight/2),this.opacity=this.initialOpacity+(this.finalOpacity-this.initialOpacity)*e,this.colour=`rgba(${this.red},${this.green},${this.blue},${this.opacity})`}}class R{constructor(t){this.particles=[],this.lastParticleDelta=0,this.nextParticleDueAt=0,this.createNewParticle=t=>{let h=t.x+3*t.frameWidth*Math.random(),e=t.frameHeight+50,i=5+5*Math.random(),d=new F(h,e,i,i,i,i,-30*Math.random(),-30*Math.random(),1,1,255,255,255,200);return d.gravityScale=.1+.2*Math.random(),d};for(let h=0;h<40;h++){let h=2500*Math.random(),e=(t.frameHeight+50)*Math.random(),i=-30*Math.random(),d=-30*Math.random(),a=.1+.2*Math.random(),l=5+5*Math.random(),r=new F(h,e,l,l,l,l,i,d,1,1,255,255,255,200);r.gravityScale=a,this.particles.push(r)}}applyDelta(t,h,e){for(let e=this.particles.length-1;e>=0;e--){let i=this.particles[e];i.applyDelta(t,h),i.alive||this.particles.splice(e,1)}this.lastParticleDelta>=this.nextParticleDueAt&&(this.lastParticleDelta=0,this.nextParticleDueAt=.02*Math.random(),this.particles.push(this.createNewParticle(e))),this.particles.length>500&&this.particles.splice(0,this.particles.length-500),this.lastParticleDelta+=h}}class M{constructor(){this.xOffset=-200,this.yOffset=50,this.executeDelta=(t,h)=>{h.canvasContext;let e=h.gameState,i={x:e.player.leader.x+this.xOffset,y:this.yOffset};e.camera&&(e.camera.x=i.x,e.camera.y=i.y)}}}class X{constructor(){this.lastLevelLoadedAtX=0,this.currentLevelIndex=0,this.executeDelta=(t,h)=>{h.canvasContext;let e=h.gameState;for(let t=e.platforms.length-1;t>=0;t--){let h=e.platforms[t];h.x+h.width<e.camera.x-2e3&&(e.platforms.splice(t,1),console.log(`${e.platforms.length} loaded platforms`))}e.camera.x%16e3>14e3&&this.lastLevelLoadedAtX<e.camera.x-3e3&&(this.lastLevelLoadedAtX=e.camera.x,this.loadNextLevel(e))},this.loadNextLevel=t=>{let h=t.camera;this.currentLevelIndex+=1;let e=this.currentLevelIndex;this.currentLevelIndex>6&&(e=6*Math.random()+1),console.log(`Loading level ${e}`);let i=T().getPlatformsForLevel(e,16e3*this.currentLevelIndex,h),d=T().getObstaclesForLevel(e,16e3*this.currentLevelIndex,h);console.log(`Loaded ${d.length} obstacles and ${i.length} plastforms`),t.platforms.push(...i),t.obstacles.push(...d)}}}!function(t){t.Bottom="BOTTOM",t.Top="TOP",t.Left="LEFT",t.Right="RIGHT"}(ty||(ty={}));const Y=(t,h,e,i,d,a,l,r)=>{let s=!1;return t<d+l&&t+e>d&&h<a+r&&h+i>a&&(s=!0),s},W=(t,h,e,i,d,a,l,r,s,y)=>{let x=e-t,g=i-h;if(0===x&&0===g)return null;if(0==x){let t=g>0?ty.Bottom:ty.Top;return t}if(0==g){let t=x>0?ty.Left:ty.Right;return t}if(x>0&&g<0){let a=t+d,s=e+d,{xFactor:x,offset:g}=L(a,h,s,i),w=O(x,g,l),o=r+y<=w?ty.Top:ty.Left;return o}if(x<0&&g<0){let d=l+s,{xFactor:a,offset:x}=L(t,h,e,i),g=O(a,x,d);return r+y<=g?ty.Top:ty.Right}if(x>0&&g>0){let s=t+d,y=h+a,x=e+d,g=i+a,{xFactor:w,offset:o}=L(s,y,x,g),n=O(w,o,l),c=r>=n?ty.Bottom:ty.Left;return c}if(x<0&&g>0){let d=l+s,y=h+a,x=i+a,{xFactor:g,offset:w}=L(t,y,e,x),o=O(g,w,d);return r>=o?ty.Bottom:ty.Right}return null},L=(t,h,e,i)=>{let d=(i-h)/(e-t);return{xFactor:d,offset:h-d*t}},O=(t,h,e)=>h+e*t,I=ty,G=(t,h)=>Y(t.x,t.y,t.width,t.height,h.x,h.y,h.width,h.height),V=(t,h)=>{let e=!1;return!1===Y(t.xPrevious,t.yPrevious,t.width,t.height,h.xPrevious,h.yPrevious,h.width,h.height)&&(e=Y(t.x,t.y,t.width,t.height,h.x,h.y,h.width,h.height)),e},A=(t,h)=>W(t.xPrevious,t.yPrevious,t.x,t.y,t.width,t.height,h.x,h.y,h.width,h.height);class k{constructor(){this.executeDelta=(t,h)=>{h.canvasContext;let e=h.gameState;for(let t=0;t<e.platforms.length;t++){let h=e.platforms[t];h.x,e.player.leader.x,h.x,h.width,e.player.leader.x,G(e.player.leader,h)&&(A(e.player.leader,h),e.player.leader.alive&&A(e.player.leader,h)!==I.Top?e.player.leader.alive=!1:A(e.player.leader,h)===I.Top&&(e.player.leader.onTheGround||e.player.landed(),e.player.leader.y=h.y+h.height,e.player.leader.vectorY=0)),G(e.player.follower,h)&&(e.player.follower.alive&&A(e.player.follower,h)!==I.Top||A(e.player.follower,h)===I.Top&&(e.player.follower.onTheGround||(e.player.follower.onTheGround=!0),e.player.follower.y=h.y+h.height,e.player.follower.vectorY=0))}for(let t=0;t<e.obstacles.length;t++){let h=e.obstacles[t];h.x,e.player.leader.x,h.x,h.width,e.player.leader.x,G(e.player.leader,h)&&e.player.leader.alive&&(e.player.leader.alive=!1)}}}}class B{constructor(){this.executeDelta=(t,h)=>{let e=h.gameState;if(!e.player.leader.alive&&!e.player.follower.alive){e.player.vortex.alive=!1;return}if(e.player.leader.alive&&(e.player.leader.applyDelta(h.gameState.world,t),e.player.leader.renderX=e.player.leader.x,e.player.leader.renderY=e.player.leader.y),0==e.player.leader.vectorX)e.player.follower.applyDelta(h.gameState.world,t),e.player.follower.renderX=e.player.follower.x,e.player.follower.renderY=e.player.follower.y;else{let t=e.player.follower,i=e.player.leader,d=e.player.vortex;if(i.positionHistory.length>0){e.player.leader.alive&&i.positionHistory.push({x:i.x,y:i.y}),t.xPrevious=t.x,t.yPrevious=t.y;let h=i.positionHistory.shift();if(void 0!==h&&(i.alive?t.x=i.x-80:t.x=h.x,t.y=h.y,t.renderX=t.x,t.renderY=t.y,t.positionHistory.push(h)),e.player.follower.positionHistory.length>=e.player.leader.positionHistory.length/2&&(e.player.vortex.alive=!0),e.player.vortex.alive){let h=t.positionHistory.shift();void 0!==h&&(d.x=h.x,d.y=h.y,d.renderX=d.x,d.renderY=d.y)}}else t.alive=!1,h.snow={x:e.player.leader.x+e.player.leader.width/2,y:e.player.leader.y+e.player.leader.height/2}}}}}class ${constructor(){this.xVectorImpact=12,this.yVectorImpact=30,this.executeDelta=(t,h)=>{h.canvasContext;let e=h.gameState;if(e.player.vortex.alive&&e.snowFall)for(let t=0;t<e.snowFall.particles.length;t++){let h=e.snowFall.particles[t];G(e.player.leader,h)&&(h.vectorX+=Math.random()*this.xVectorImpact,h.vectorY+=Math.random()*this.yVectorImpact)}}}}class z{constructor(t,h){this.particles=[];for(let e=0;e<25;e++){let e=t-17.5+35*Math.random(),i=h-17.5+35*Math.random(),d=5+50*Math.random(),a=d/2.5,l=.2+.5*Math.random(),r=1+.5*Math.random(),s=100*Math.random()*e-17.5,y=100*Math.random()*i-17.5,x=new F(e,i,a,a,d,d,s,y,l,0,255,255,255,r);x.obeysGravity=!1,this.particles.push(x)}for(let e=0;e<45;e++){let e=t-17.5+35*Math.random(),i=h-17.5+35*Math.random(),d=5+5*Math.random(),a=-50+100*Math.random(),l=50+100*Math.random(),r=new F(e,i,d,d,d,d,a,l,1,1,255,255,255,30);r.gravityScale=.2,this.particles.push(r)}}applyDelta(t,h){for(let e=this.particles.length-1;e>=0;e--){let i=this.particles[e];i.applyDelta(t,h),i.alive||this.particles.splice(e,1)}}}class E{constructor(){this.executeDelta=(t,h)=>{h.canvasContext;let e=h.gameState;if(h.snow){let t=h.snow;e.snowClouds.push(new z(t.x,t.y))}for(let h=e.snowClouds.length-1;h>=0;h--){let i=e.snowClouds[0];if(i.particles.length>0){for(let h of(i.applyDelta(e.world,t),i.particles))if(h.obeysGravity){for(let t of e.platforms)if(G(h,t)){V(h,t)||(h.alive=!1);let e=A(h,t);e===I.Top?(h.vectorX=0,h.vectorY=0,h.y=t.y+t.height):e===I.Bottom?(h.vectorY=0,h.y=t.y-h.height):e===I.Right?(h.vectorX=0,h.x=t.x+t.width):(h.vectorX=0,h.x=t.x-h.width)}}}else e.snowClouds.splice(h,1)}}}}class N{constructor(){this.executeDelta=(t,h)=>{h.canvasContext;let e=h.gameState,i=e.snowFall;if(i&&i.particles.length>0){for(let h of(i.applyDelta(e.world,t,e.camera),i.particles))if(h.obeysGravity){for(let t of e.platforms)if(G(h,t)){let e=A(h,t);e===I.Top?(h.vectorX=0,h.vectorY=0,h.y=t.y+t.height):e===I.Bottom?(h.vectorY=0,h.y=t.y-h.height):e===I.Right?(h.vectorX=0,h.x=t.x+t.width):(h.vectorX=0,h.x=t.x-h.width)}}}}}}class J{constructor(t){this.executeDelta=(t,h)=>{let e=h.canvasContext;e.fillStyle=this.color,e.fillRect(0,0,e.canvas.width,e.canvas.height)},this.color=t}}const q=h=>{t=h},U=h=>{let e=h;return t.displayRatio&&(e*=t.displayRatio),e},j=(t,h,e)=>({renderX:h.xOffset+(t.renderX-h.x)*h.pixelToFrameRatio,renderY:e.canvas.height-h.yOffset-(t.renderY+t.renderHeight)*h.pixelToFrameRatio,renderWidth:t.renderWidth*h.pixelToFrameRatio,renderHeight:t.renderHeight*h.pixelToFrameRatio}),K=(t,h,e)=>{e.beginPath(),e.fillStyle=t.colour;let i=j(t,h,e);e.fillRect(i.renderX,i.renderY,i.renderWidth,i.renderHeight)},Q=(t,h,e,i)=>{i.save(),i.beginPath(),i.fillStyle=t.colour;let d=j(t,e,i);i.translate(d.renderX+d.renderWidth/2,d.renderY+d.renderHeight/2),i.rotate((360-h)*Math.PI/180),i.fillRect(-d.renderWidth/2,-d.renderHeight/2,d.renderWidth,d.renderHeight),i.restore()};class Z{constructor(){this.executeDelta=(t,h)=>{let e=h.canvasContext;h.displayRatio=e.canvas.width/960,q(h)}}}class _{constructor(){this.executeDelta=(t,h)=>{let e=h.canvasContext,i=h.gameState;e.translate(U(-i.camera.x),U(-i.camera.y))}}}class tt{constructor(){this.direction=1,this.x=130,this.minX=100,this.maxX=200,this.executeDelta=(t,h)=>{let e=h.canvasContext;e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,e.canvas.width,e.canvas.height)}}}class th{executeDelta(t,h){let e=h.canvasContext,i=h.gameState,d=i.camera;h.gameState.obstacles?.forEach(t=>{!(t.x>d.x+d.frameWidth)&&(t.x+t.width<d.x||K(t,d,e))})}}class te{executeDelta(t,h){let e=h.canvasContext,i=h.gameState,d=i.camera;h.gameState.platforms?.forEach(t=>{!(t.x>d.x+2e3)&&(t.x+t.width<d.x-100||K(t,d,e))})}}class ti{executeDelta(t,h){let e=h.canvasContext;e.fillStyle="#D10000";let i=h.gameState,d=i.camera;if(!i.player.leader.alive&&!i.player.follower.alive)return;e.beginPath();let a=td(i.player.leader.vectorY,Math.abs(i.world.minVerticalVelocityPerSecond));a*=i.player.leader.vectorX/400,Q(i.player.leader,a,d,e);let l=td((i.player.follower.y-i.player.follower.yPrevious)/t,Math.abs(i.world.minVerticalVelocityPerSecond)),r=(i.player.follower.x-i.player.follower.xPrevious)/t;l*=r/400,Q(i.player.follower,l,d,e)}}const td=(t,h)=>90*(t/h);class ta{constructor(){this.executeDelta=(t,h)=>{let e=h.canvasContext,i=h.gameState,d=i.camera,a=new Path2D;a.rect(d.xOffset,d.yOffset,d.frameWidth*d.pixelToFrameRatio,d.frameHeight*d.pixelToFrameRatio),e.clip(a)}}}class tl{executeDelta(t,h){let e=h.canvasContext,i=h.gameState,d=i.camera;for(let t of i.snowClouds)for(let h of t.particles)K(h,d,e)}}class tr{executeDelta(t,h){let e=h.canvasContext,i=h.gameState,d=i.camera,a=i.snowFall;a&&a.particles.forEach(t=>{!(t.x>d.x+d.frameWidth)&&(t.x<d.x-100||K(t,d,e))})}}class ts{constructor(t,h){this.stop=()=>{this.runnerStopCallback()},this.step=t=>{this.resizeCallback(),this.gameState.camera?.setCanvasSize(this.canvasContext),this.pipeline.execute(t,this.gameState)},this.bindUICapture=()=>{this.canvasContext.canvas.addEventListener("pointerdown",this.userClicked,{passive:!0})},this.userClicked=()=>{this.gameState.player.clicked()},this.canvasContext=t,this.resizeCallback=h,this.pipeline=new a(this.canvasContext),this.setup()}setup(){this.gameState=m(),this.gameState.camera=new d(!0,!0,960,640,this.canvasContext),this.gameState.platforms=T().getPlatformsForLevel(0,0,this.gameState.camera),this.gameState.obstacles=T().getObstaclesForLevel(0,0,this.gameState.camera),this.gameState.snowFall=new R(this.gameState.camera),this.pipeline.addPipe(new B),this.pipeline.addPipe(new k),this.pipeline.addPipe(new E),this.pipeline.addPipe(new N),this.pipeline.addPipe(new $),this.pipeline.addPipe(new M),this.pipeline.addPipe(new X),this.pipeline.addPipe(new Z),this.pipeline.addPipe(new ta),this.pipeline.addPipe(new _),this.pipeline.addPipe(new tt),this.pipeline.addPipe(new J("#1e2640")),this.pipeline.addPipe(new te),this.pipeline.addPipe(new th),this.pipeline.addPipe(new ti),this.pipeline.addPipe(new tl),this.pipeline.addPipe(new tr),this.bindUICapture(),this.runnerStopCallback=l(this.step,1/90)}}var ty,tx=(t,h)=>{new ts(t,h)};(()=>{let t=document.body,{canvas:e,context:i,resizeCallback:d}=h("game-canvas",t);d(),tx(i,d)})();